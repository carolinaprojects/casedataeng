{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Person",
						"type": "DatasetReference"
					},
					"name": "Person"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "Productiontb"
				},
				{
					"dataset": {
						"referenceName": "Customer",
						"type": "DatasetReference"
					},
					"name": "Customer"
				},
				{
					"dataset": {
						"referenceName": "OD",
						"type": "DatasetReference"
					},
					"name": "OrderDetail"
				},
				{
					"dataset": {
						"referenceName": "OrderHeader",
						"type": "DatasetReference"
					},
					"name": "OrderHeader"
				},
				{
					"dataset": {
						"referenceName": "OFFERP",
						"type": "DatasetReference"
					},
					"name": "SpecialOff"
				}
			],
			"sinks": [],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          BusinessEntityID as short,",
				"          PersonType as string,",
				"          NameStyle as string,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          EmailPromotion as short,",
				"          AdditionalContactInfo as string,",
				"          Demographics as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Person",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as integer,",
				"          MakeFlag as string,",
				"          FinishedGoodsFlag as string,",
				"          Color as string,",
				"          SafetyStockLevel as string,",
				"          ReorderPoint as string,",
				"          StandardCost as string,",
				"          ListPrice as string,",
				"          Size as string,",
				"          SizeUnitMeasureCode as string,",
				"          WeightUnitMeasureCode as string,",
				"          Weight as string,",
				"          DaysToManufacture as string,",
				"          ProductLine as string,",
				"          Class as string,",
				"          Style as string,",
				"          ProductSubcategoryID as string,",
				"          ProductModelID as integer,",
				"          SellStartDate as string,",
				"          SellEndDate as string,",
				"          DiscontinuedDate as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Productiontb",
				"source(output(",
				"          CustomerID as short,",
				"          PersonID as string,",
				"          StoreID as string,",
				"          TerritoryID as short,",
				"          AccountNumber as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Customer",
				"source(output(",
				"          SalesOrderID as integer,",
				"          SalesOrderDetailID as short,",
				"          CarrierTrackingNumber as string,",
				"          OrderQty as short,",
				"          ProductID as short,",
				"          SpecialOfferID as short,",
				"          UnitPrice as string,",
				"          UnitPriceDiscount as string,",
				"          LineTotal as double,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> OrderDetail",
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as short,",
				"          OrderDate as string,",
				"          DueDate as string,",
				"          ShipDate as string,",
				"          Status as short,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as short,",
				"          SalesPersonID as string,",
				"          TerritoryID as short,",
				"          BillToAddressID as short,",
				"          ShipToAddressID as short,",
				"          ShipMethodID as short,",
				"          CreditCardID as string,",
				"          CreditCardApprovalCode as string,",
				"          CurrencyRateID as string,",
				"          SubTotal as string,",
				"          TaxAmt as string,",
				"          Freight as string,",
				"          TotalDue as string,",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> OrderHeader",
				"source(output(",
				"          SpecialOfferID as short,",
				"          ProductID as short,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SpecialOff"
			]
		}
	}
}